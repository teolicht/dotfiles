#!/usr/bin/env python3
from argparse import ArgumentParser
from pathlib import Path
from tempfile import TemporaryDirectory
import subprocess


def main():
    parser = ArgumentParser(
        description="Convert to a bunch of different formats and pick the smallest."
    )
    parser.add_argument("input_file", type=Path)
    parser.add_argument("output_file_without_extension", type=Path)
    parser.add_argument("extensions", nargs="+", type=str)
    args = parser.parse_args()

    extensions = set(args.extensions)

    with TemporaryDirectory() as tempdir:
        print(f"converting to {', '.join(extensions)}")

        output_files = []
        for ext in extensions:
            output_files.append(Path(tempdir, f"ffmpeg-smallest-conversion.{ext}"))

        subprocess.check_call(
            ["ffmpeg", "-v", "warning", "-stats", "-i", args.input_file] + output_files
        )

        candidates = [args.input_file] + output_files
        smallest = min(candidates, key=lambda f: f.stat().st_size)

        if smallest == args.input_file:
            print("original was smallest, renaming")
        else:
            print(f"smallest: {smallest.suffix}")
        final_destination_file = Path(
            f"{args.output_file_without_extension}{smallest.suffix}"
        )
        smallest.rename(final_destination_file)


if __name__ == "__main__":
    main()
